package: automation
imports:
  - github.com/cortezaproject/corteza-server/system/types
  - github.com/cortezaproject/corteza-server/pkg/rbac
  - github.com/cortezaproject/corteza-server/pkg/actionlog

types:
  Template:
    as: '*types.Template'
    struct:
      - { name: 'ID',              exprType: 'ID',           goType: 'uint64',     mode: ro, alias: 'templateID'}
      - { name: 'handle',          exprType: 'Handle',       goType: 'string' }
      - { name: 'language',        exprType: 'String',       goType: 'string' }

      - { name: 'type',            exprType: 'DocumentType', goType: 'types.DocumentType' }
      - { name: 'partial',         exprType: 'Boolean',      goType: 'bool' }

      - { name: 'meta',            exprType: 'TemplateMeta', goType: 'types.TemplateMeta' }
      - { name: 'template',        exprType: 'String',       goType: 'string' }
      - { name: 'labels',          exprType: 'KV',           goType: 'map[string]string' }

      - { name: 'ownerID',         exprType: 'ID',           goType: 'uint64',     mode: ro}
      - { name: 'createdAt',       exprType: 'DateTime',     goType: 'time.Time',  mode: ro}
      - { name: 'updatedAt',       exprType: 'DateTime',     goType: '*time.Time', mode: ro }
      - { name: 'deletedAt',       exprType: 'DateTime',     goType: '*time.Time', mode: ro }
      - { name: 'lastUsedAt',      exprType: 'DateTime',     goType: '*time.Time', mode: ro }
  User:
    as: '*types.User'
    struct:
      - { name: 'ID',              exprType: 'ID',         goType: 'uint64', mode: ro, alias: 'userID' }
      - { name: 'username',        exprType: 'String',     goType: 'string' }
      - { name: 'email',           exprType: 'String',     goType: 'string' }
      - { name: 'name',            exprType: 'String',     goType: 'string' }
      - { name: 'handle',          exprType: 'Handle',     goType: 'string' }
      - { name: 'emailConfirmed',  exprType: 'Boolean',    goType: 'bool' }
      - { name: 'labels',          exprType: 'KV',         goType: 'map[string]string' }
      - { name: 'createdAt',       exprType: 'DateTime',   goType: 'time.Time',  mode: ro}
      - { name: 'updatedAt',       exprType: 'DateTime',   goType: '*time.Time', mode: ro }
      - { name: 'suspendedAt',     exprType: 'DateTime',   goType: '*time.Time', mode: ro }
      - { name: 'deletedAt',       exprType: 'DateTime',   goType: '*time.Time', mode: ro }
  Role:
    as: '*types.Role'
    struct:
      - { name: 'ID',              exprType: 'ID',         goType: 'uint64', mode: ro, alias: 'roleID' }
      - { name: 'name',            exprType: 'String',     goType: 'string' }
      - { name: 'handle',          exprType: 'Handle',     goType: 'string' }
      - { name: 'labels',          exprType: 'KV',         goType: 'map[string]string' }
      - { name: 'createdAt',       exprType: 'DateTime',   goType: 'time.Time',  mode: ro}
      - { name: 'updatedAt',       exprType: 'DateTime',   goType: '*time.Time', mode: ro }
      - { name: 'archivedAt',      exprType: 'DateTime',   goType: '*time.Time', mode: ro }
      - { name: 'deletedAt',       exprType: 'DateTime',   goType: '*time.Time', mode: ro }

  DocumentType:
    as: 'types.DocumentType'
  TemplateMeta:
    as: 'types.TemplateMeta'
    struct:
      - { name: 'short',       exprType: 'String', goType: 'string'}
      - { name: 'description', exprType: 'String', goType: 'string'}
  RenderedDocument:
   as: '*renderedDocument'
   struct:
      - { name: 'document', exprType: 'Reader', goType: 'io.Reader' }
      - { name: 'name',     exprType: 'string', goType: 'string' }
      - { name: 'type',     exprType: 'string', goType: 'string' }
  RenderOptions:
    as: 'map[string]string'

  QueueMessage:
    as: '*types.QueueMessage'
    struct:
      - { name: 'Queue',   exprType: 'String', goType: 'string' }
      - { name: 'Payload', exprType: 'Bytes',  goType: '[]byte' }

  RbacResource:
    as: 'rbac.Resource'

  Action:
    as: '*actionlog.Action'
