---
# This is direct conversion from old api/*/spec.json files
# using https://www.json2yaml.com/
#
# Next step: swagger.

endpoints:
  - title: Federation node handshake
    path: "/nodes/{nodeID}/handshake"
    entrypoint: nodeHandshake
    parameters:
      path:
      - name: nodeID
        type: uint64
        required: true
        title: NodeID
    apis:
      - name: initialize
        method: POST
        title: Initialize the handshake step with node B
        path: ""
        parameters:
          post:
            - name: pairToken
              type: string
              required: true
              title: Pairing token to authenticate handshake initialization request
            - name: sharedNodeID
              type: uint64
              required: true
              title: Remote (invoker's) node ID
            - name: authToken
              type: string
              required: true
              title: Authentication token so that remote

  - title: Federation nodes
    path: "/nodes"
    entrypoint: node
    apis:
      - name: search
        method: GET
        title: Search federated nodes
        path: "/"
        parameters:
          get:
            - name: query
              type: string
              title: Filter nodes by name and host
            - name: status
              type: string
              title: Filter by status
      - name: create
        method: POST
        title: Create a new federation node
        path: "/"
        parameters:
          post:
            - name: baseURL
              type: string
              required: false
              title: Federation API base URL
            - name: name
              type: string
              required: false
              title: Name for this node
            - name: pairingURI
              type: string
              required: false
              title: Pairing URI

      - name: generateURI
        method: POST
        title: Creates new sharable federation URI
        path: "/{nodeID}/uri"
        parameters: { path: [ { name: nodeID, type: uint64, required: true, title: NodeID } ] }

      - name: update
        method: POST
        title: Updates existing node
        path: "/{nodeID}"
        parameters:
          path: [ { name: nodeID, type: uint64, required: true, title: NodeID } ]
          post:
            - name: name
              type: string
              required: false
              title: Name for this node
            - name: baseURL
              type: string
              required: false
              title: Federation API base URL

      - name: delete
        method: DELETE
        title: Deletes node
        path: "/{nodeID}"
        parameters: { path: [ { name: nodeID, type: uint64, required: true, title: NodeID } ] }

      - name: undelete
        method: POST
        title: Undeletes a node
        path: "/{nodeID}/undelete"
        parameters: { path: [ { name: nodeID, type: uint64, required: true, title: NodeID } ] }

      - name: pair
        method: POST
        title: Initialize the pairing process between the two nodes
        path: "/{nodeID}/pair"
        parameters: { path: [ { name: nodeID, type: uint64, required: true, title: NodeID } ] }

      - name: handshake confirm
        method: POST
        title: Confirm the requested handshake
        path: "/{nodeID}/handshake-confirm"
        parameters: { path: [ { name: nodeID, type: uint64, required: true, title: NodeID } ] }

      - name: handshake complete
        method: POST
        title: Complete the handshake
        path: "/{nodeID}/handshake-complete"
        parameters:
          path: [ { name: nodeID, type: uint64, required: true, title: NodeID } ]
          post:
            - name: tokenA
              type: string
              required: true
              title: Node A token

  - title: Manage structure
    description: Manage structure
    entrypoint: manageStructure
    path: "/nodes/{nodeID}/modules"
    authentication: []
    imports:
      - github.com/cortezaproject/corteza-server/federation/types
    apis:
      - name: readExposed
        method: GET
        title: Exposed settings for module
        path: "/{moduleID}/exposed"
        parameters:
          path:
            - type: uint64
              name: nodeID
              required: true
              title: Node ID
            - type: uint64
              name: moduleID
              required: true
              title: Module ID
      - name: createExposed
        method: PUT
        title: Add module to federation
        path: "/"
        parameters:
          path:
            - type: uint64
              name: nodeID
              required: true
              title: Node ID
          post:
            - type: uint64
              name: composeModuleID
              required: true
              title: Compose module id
            - type: types.ModuleFieldSet
              name: fields
              required: false
              title: Exposed module fields
      - name: removeExposed
        method: DELETE
        title: Remove from federation
        path: "/{moduleID}/exposed"
        parameters:
          path:
            - type: uint64
              name: nodeID
              required: true
              title: Node ID
            - type: uint64
              name: moduleID
              required: true
              title: Module ID
      - name: readShared
        method: GET
        title: Shared settings for module
        path: "/{moduleID}/shared"
        parameters:
          path:
            - type: uint64
              name: nodeID
              required: true
              title: Node ID
            - type: uint64
              name: moduleID
              required: true
              title: Module ID
      - name: createMappings
        method: PUT
        title: Add fields mappings to federated module
        path: "/{moduleID}/mapped"
        parameters:
          path:
            - type: uint64
              name: nodeID
              required: true
              title: Node ID
            - type: uint64
              name: moduleID
              required: true
              title: Module ID
          post:
            - type: uint64
              name: composeModuleID
              required: true
              title: Compose module id
            - type: types.ModuleFieldMappingSet
              name: fields
              required: false
              title: Exposed module fields
      - name: readMappings
        method: GET
        title: Fields mappings for module
        path: "/{moduleID}/mapped"
        parameters:
          path:
            - type: uint64
              name: nodeID
              required: true
              title: Node ID
            - type: uint64
              name: moduleID
              required: true
              title: Module ID
      - name: listAll
        method: GET
        title: List of shared/exposed modules
        path: "/"
        parameters:
          path:
            - type: uint64
              name: nodeID
              required: true
              title: Node ID
          get:
            - name: shared
              type: bool
              required: false
              title: List shared modules
            - name: exposed
              type: bool
              required: false
              title: List exposed modules
