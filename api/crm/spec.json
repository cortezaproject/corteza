[
  {
    "title": "Pages",
    "description": "CRM module pages",
    "package": "crm",
    "entrypoint": "page",
    "path": "/page",
    "authentication": [],
    "struct": [
      {
        "imports": [
          "sqlxTypes github.com/jmoiron/sqlx/types"
        ]
      }
    ],
    "apis": [
      {
        "name": "list",
        "method": "GET",
        "path": "/",
        "title": "List available pages",
        "parameters": {
          "get": [
            {
              "type": "uint64",
              "name": "selfID",
              "required": false,
              "title": "Parent page ID"
            }
          ]
        }
      },
      {
        "name": "create",
        "method": "POST",
        "title": "Create page",
        "path": "/",
        "parameters": {
          "post": [
            {
              "type": "uint64",
              "name": "selfID",
              "required": false,
              "title": "Parent Page ID"
            },
            {
              "type": "uint64",
              "name": "moduleID",
              "required": false,
              "title": "Module ID"
            },
            {
              "type": "string",
              "name": "title",
              "required": true,
              "title": "Title"
            },
            {
              "type": "string",
              "name": "description",
              "required": false,
              "title": "Description"
            },
            {
              "type": "bool",
              "name": "visible",
              "required": false,
              "title": "Visible in navigation"
            },
            {
              "type": "sqlxTypes.JSONText",
              "name": "blocks",
              "required": true,
              "title": "Blocks JSON"
            }
          ]
        }
      },
      {
        "name": "read",
        "path": "/{pageID}",
        "method": "GET",
        "title": "Get page details",
        "parameters": {
          "path": [
            {
              "type": "uint64",
              "name": "pageID",
              "required": true,
              "title": "Page ID"
            }
          ]
        }
      },
      {
        "name": "tree",
        "path": "/tree",
        "method": "GET",
        "title": "Get page all (non-record) pages, hierarchically",
        "parameters": {}
      },
      {
        "name": "edit",
        "method": "POST",
        "title": "Edit page",
        "path": "/{pageID}",
        "parameters": {
          "path": [
            {
              "type": "uint64",
              "name": "pageID",
              "required": true,
              "title": "Page ID"
            }
          ],
          "post": [
            {
              "type": "uint64",
              "name": "selfID",
              "required": false,
              "title": "Parent Page ID"
            },
            {
              "type": "uint64",
              "name": "moduleID",
              "required": false,
              "title": "Module ID (optional)"
            },
            {
              "type": "string",
              "name": "title",
              "required": true,
              "title": "Title"
            },
            {
              "type": "string",
              "name": "description",
              "required": false,
              "title": "Description"
            },
            {
              "type": "bool",
              "name": "visible",
              "required": false,
              "title": "Visible in navigation"
            },
            {
              "type": "sqlxTypes.JSONText",
              "name": "blocks",
              "required": true,
              "title": "Blocks JSON"
            }
          ]
        }
      },
      {
        "name": "reorder",
        "method": "POST",
        "title": "Reorder pages",
        "path": "/{selfID}/reorder",
        "parameters": {
          "path": [
            {
              "type": "uint64",
              "name": "selfID",
              "required": true,
              "title": "Parent page ID"
            }
          ],
          "post": [
            {
              "type": "[]string",
              "name": "pageIDs",
              "required": true,
              "title": "Page ID order"
            }
          ]
        }
      },
      {
        "name": "delete",
        "path": "/{pageID}",
        "method": "Delete",
        "title": "Delete page",
        "parameters": {
          "path": [
            {
              "type": "uint64",
              "name": "pageID",
              "required": true,
              "title": "Page ID"
            }
          ]
        }
      }
    ]
  },
  {
    "title": "Modules",
    "description": "CRM module definitions",
    "package": "crm",
    "entrypoint": "module",
    "path": "/module",
    "authentication": [],
    "struct": [
      {
        "imports": [
          "sqlxTypes github.com/jmoiron/sqlx/types",
          "github.com/crusttech/crust/crm/types"
        ]
      }
    ],
    "apis": [
      {
        "name": "list",
        "method": "GET",
        "title": "List modules",
        "path": "/",
        "parameters": {
          "get": [
            {
              "type": "string",
              "name": "query",
              "required": false,
              "title": "Search query"
            }
          ]
        }
      },
      {
        "name": "create",
        "method": "POST",
        "title": "Create module",
        "path": "/",
        "parameters": {
          "post": [
            {
              "type": "string",
              "name": "name",
              "required": true,
              "title": "Module Name"
            },
            {
              "type": "types.ModuleFieldSet",
              "name": "fields",
              "required": true,
              "title": "Fields JSON"
            },
            {
              "type": "sqlxTypes.JSONText",
              "name": "meta",
              "required": true,
              "title": "Module meta data"
            }
          ]
        }
      },
      {
        "name": "read",
        "method": "GET",
        "title": "Read module",
        "path": "/{moduleID}",
        "parameters": {
          "path": [
            {
              "type": "uint64",
              "name": "moduleID",
              "required": true,
              "title": "Module ID"
            }
          ]
        }
      },
      {
        "name": "edit",
        "method": "POST",
        "title": "Edit module",
        "path": "/{moduleID}",
        "parameters": {
          "path": [
            {
              "type": "uint64",
              "name": "moduleID",
              "required": true,
              "title": "Module ID"
            }
          ],
          "post": [
            {
              "type": "string",
              "name": "name",
              "required": true,
              "title": "Module Name"
            },
            {
              "type": "types.ModuleFieldSet",
              "name": "fields",
              "required": true,
              "title": "Fields JSON"
            },
            {
              "type": "sqlxTypes.JSONText",
              "name": "meta",
              "required": true,
              "title": "Module meta data"
            }
          ]
        }
      },
      {
        "name": "delete",
        "method": "DELETE",
        "title": "Delete module",
        "path": "/{moduleID}",
        "parameters": {
          "path": [
            {
              "type": "uint64",
              "name": "moduleID",
              "required": true,
              "title": "Module ID"
            }
          ]
        }
      },
      {
        "name": "record/report",
        "method": "GET",
        "title": "Generates report from module records",
        "path": "/{moduleID}/report",
        "parameters": {
          "path": [
            {
              "type": "uint64",
              "name": "moduleID",
              "required": true,
              "title": "Module ID"
            }
          ],
          "get": [
            {
              "type": "string",
              "name": "metrics",
              "required": true,
              "title": "Metrics (eg: 'COUNT(*) AS count, SUM(money)')"
            },
            {
              "type": "string",
              "name": "dimensions",
              "required": true,
              "title": "Dimensions (eg: 'DATE(foo), status')"
            },
            {
              "type": "string",
              "name": "filter",
              "required": false,
              "title": "Filter (eg: 'DATE(foo) > 2010')"
            }
          ]
        }
      },
      {
        "name": "record/list",
        "method": "GET",
        "title": "List/read records from module section",
        "path": "/{moduleID}/record",
        "parameters": {
          "path": [
            {
              "type": "uint64",
              "name": "moduleID",
              "required": true,
              "title": "Module ID"
            }
          ],
          "get": [
            {
              "name": "filter",
              "type": "string",
              "required": false,
              "title": "Filtering condition"
            },
            {
              "name": "page",
              "type": "int",
              "required": false,
              "title": "Page number (0 based)"
            },
            {
              "name": "perPage",
              "type": "int",
              "required": false,
              "title": "Returned items per page (default 50)"
            },
            {
              "name": "sort",
              "type": "string",
              "required": false,
              "title": "Sort field (default id desc)"
            }
          ]
        }
      },
      {
        "name": "record/create",
        "method": "POST",
        "title": "Create record in module section",
        "path": "/{moduleID}/record",
        "parameters": {
          "path": [
            {
              "type": "uint64",
              "name": "moduleID",
              "required": true,
              "title": "Module ID"
            }
          ],
          "post": [
            {
              "type": "sqlxTypes.JSONText",
              "name": "fields",
              "required": true,
              "title": "Record JSON"
            }
          ]
        }
      },
      {
        "name": "record/read",
        "method": "GET",
        "title": "Read records by ID from module section",
        "path": "/{moduleID}/record/{recordID}",
        "parameters": {
          "path": [
            {
              "type": "uint64",
              "name": "moduleID",
              "required": true,
              "title": "Module ID"
            },
            {
              "type": "uint64",
              "name": "recordID",
              "required": true,
              "title": "Record ID"
            }
          ]
        }
      },
      {
        "name": "record/edit",
        "method": "POST",
        "title": "Add/update records in module section",
        "path": "/{moduleID}/record/{recordID}",
        "parameters": {
          "path": [
            {
              "type": "uint64",
              "name": "moduleID",
              "required": true,
              "title": "Module ID"
            },
            {
              "type": "uint64",
              "name": "recordID",
              "required": true,
              "title": "Record ID"
            }
          ],
          "post": [
            {
              "type": "sqlxTypes.JSONText",
              "name": "fields",
              "required": true,
              "title": "Record JSON"
            }
          ]
        }
      },
      {
        "name": "record/delete",
        "method": "DELETE",
        "title": "Delete record row from module section",
        "path": "/{moduleID}/record/{recordID}",
        "parameters": {
          "path": [
            {
              "type": "uint64",
              "name": "moduleID",
              "required": true,
              "title": "Module ID"
            },
            {
              "type": "uint64",
              "name": "recordID",
              "required": true,
              "title": "Record ID"
            }
          ]
        }
      }
    ]
  },
  {
    "title": "Charts",
    "path": "/chart",
    "entrypoint": "chart",
    "authentication": [],
    "struct": [
      {
        "imports": [
          "sqlxTypes github.com/jmoiron/sqlx/types"
        ]
      }
    ],
    "apis": [
      {
        "name": "list",
        "method": "GET",
        "title": "List/read charts from module section",
        "path": "/"
      },
      {
        "name": "create",
        "method": "POST",
        "title": "List/read charts from module section",
        "path": "/",
        "parameters": {
          "post": [
            {
              "type": "sqlxTypes.JSONText",
              "name": "config",
              "required": true,
              "title": "Chart JSON"
            },
            {
              "name": "name",
              "title": "Chart name",
              "type": "string",
              "required": true
            }
          ]
        }
      },
      {
        "name": "read",
        "method": "GET",
        "title": "Read charts by ID from module section",
        "path": "/{chartID}",
        "parameters": {
          "path": [
            {
              "type": "uint64",
              "name": "chartID",
              "required": true,
              "title": "Chart ID"
            }
          ]
        }
      },
      {
        "name": "edit",
        "method": "POST",
        "title": "Add/update charts in module section",
        "path": "/{chartID}",
        "parameters": {
          "path": [
            {
              "type": "uint64",
              "name": "chartID",
              "required": true,
              "title": "Chart ID"
            }
          ],
          "post": [
            {
              "type": "sqlxTypes.JSONText",
              "name": "config",
              "required": true,
              "title": "Chart JSON"
            },
            {
              "name": "name",
              "title": "Chart name",
              "type": "string",
              "required": true
            }
          ]
        }
      },
      {
        "name": "delete",
        "method": "DELETE",
        "title": "Delete chart",
        "path": "/{chartID}",
        "parameters": {
          "path": [
            {
              "type": "uint64",
              "name": "chartID",
              "required": true,
              "title": "Chart ID"
            }
          ]
        }
      }
    ]
  },
  {
    "title": "Triggers",
    "description": "CRM Triggers",
    "package": "crm",
    "entrypoint": "trigger",
    "path": "/trigger",
    "authentication": [],
    "apis": [
      {
        "name": "list",
        "method": "GET",
        "path": "/",
        "title": "List available triggers",
        "parameters": {
          "get": [
            {
              "type": "uint64",
              "name": "moduleID",
              "required": false,
              "title": "Filter triggers by module"
            }
          ]
        }
      },
      {
        "name": "create",
        "method": "POST",
        "title": "Create trigger",
        "path": "/",
        "parameters": {
          "post": [
            {
              "type": "uint64",
              "name": "moduleID",
              "required": false,
              "title": "Module ID"
            },
            {
              "type": "string",
              "name": "name",
              "required": true,
              "title": "Name"
            },
            {
              "type": "[]string",
              "name": "actions",
              "required": false,
              "title": "Actions that trigger this trigger"
            },
            {
              "type": "bool",
              "name": "enabled",
              "required": false,
              "title": "Enabled"
            },
            {
              "type": "string",
              "name": "source",
              "required": false,
              "title": "Trigger source code"
            }
          ]
        }
      },
      {
        "name": "read",
        "path": "/{triggerID}",
        "method": "GET",
        "title": "Get trigger details",
        "parameters": {
          "path": [
            {
              "type": "uint64",
              "name": "triggerID",
              "required": true,
              "title": "Trigger ID"
            }
          ]
        }
      },
      {
        "name": "edit",
        "method": "POST",
        "title": "Edit trigger",
        "path": "/{triggerID}",
        "parameters": {
          "path": [
            {
              "type": "uint64",
              "name": "triggerID",
              "required": true,
              "title": "Trigger ID"
            }
          ],
          "post": [
            {
              "type": "uint64",
              "name": "moduleID",
              "required": false,
              "title": "Module ID"
            },
            {
              "type": "string",
              "name": "name",
              "required": true,
              "title": "Name"
            },
            {
              "type": "[]string",
              "name": "actions",
              "required": false,
              "title": "Actions that trigger this trigger"
            },
            {
              "type": "bool",
              "name": "enabled",
              "required": false,
              "title": "Enabled"
            },
            {
              "type": "string",
              "name": "source",
              "required": false,
              "title": "Trigger source code"
            }
          ]
        }
      },
      {
        "name": "delete",
        "path": "/{triggerID}",
        "method": "Delete",
        "title": "Delete trigger",
        "parameters": {
          "path": [
            {
              "type": "uint64",
              "name": "triggerID",
              "required": true,
              "title": "Trigger ID"
            }
          ]
        }
      }
    ]
  },
  {
    "title": "Notifications",
    "description": "CRM Notifications",
    "package": "crm",
    "entrypoint": "notification",
    "path": "/notification",
    "authentication": [],
    "struct": [
      {
        "imports": [
          "sqlxTypes github.com/jmoiron/sqlx/types"
        ]
      }
    ],
    "apis": [
      {
        "name": "email/send",
        "method": "POST",
        "title": "Send email from the CRM",
        "path": "/email",
        "parameters": {
          "post": [
            { "name": "to",          "type": "[]string",           "required": true,  "title": "Email addresses or Crust user IDs" },
            { "name": "cc",          "type": "[]string",           "required": false, "title": "Email addresses or Crust user IDs" },
            { "name": "replyTo",     "type": "string",             "required": false, "title": "Crust user ID or email address in reply-to field" },
            { "name": "subject ",    "type": "string",             "required": false, "title": "Email subject" },
            { "name": "content",     "type": "sqlxTypes.JSONText", "required": true,  "title": "Message content" }
          ]
        }
      }
    ]
  }
]
