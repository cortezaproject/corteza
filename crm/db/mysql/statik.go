// Code generated by statik. DO NOT EDIT.

package mysql

import (
	"github.com/rakyll/statik/fs"
)

func init() {
	data := "PK\x03\x04\x14\x00\x08\x00\x00\x00\xfcZHM\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1a\x00	\x0020180704080000.base.up.sqlUT\x05\x00\x01L>\xbb[CREATE TABLE `crm_content` (\n `id` bigint(20) unsigned NOT NULL,\n `module_id` bigint(20) unsigned NOT NULL,\n `created_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,\n `updated_at` datetime DEFAULT NULL,\n `archived_at` datetime DEFAULT NULL,\n `deleted_at` datetime DEFAULT NULL,\n PRIMARY KEY (`id`,`module_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE `crm_content_columns` (\n `content_id` bigint(20) NOT NULL,\n `column_name` varchar(255) NOT NULL,\n `column_value` text NOT NULL,\n PRIMARY KEY (`content_id`,`column_name`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE `crm_fields` (\n `field_type` varchar(16) NOT NULL COMMENT 'Short field type (string, boolean,...)',\n `field_name` varchar(255) NOT NULL COMMENT 'Description of field contents',\n `field_template` varchar(255) NOT NULL COMMENT 'HTML template file for field',\n PRIMARY KEY (`field_type`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE `crm_module` (\n `id` bigint(20) unsigned NOT NULL,\n `name` varchar(64) NOT NULL COMMENT 'The name of the module',\n `json` json NOT NULL COMMENT 'List of field definitions for the module',\n PRIMARY KEY (`id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nCREATE TABLE `crm_module_form` (\n `module_id` bigint(20) unsigned NOT NULL,\n `place` tinyint(3) unsigned NOT NULL,\n `type` varchar(64) NOT NULL COMMENT 'The type of the form input field',\n `name` varchar(64) NOT NULL COMMENT 'The name of the field in the form',\n `title` varchar(255) NOT NULL COMMENT 'The label of the form input',\n `placeholder` varchar(255) NOT NULL COMMENT 'Placeholder text (if supported by input)',\n PRIMARY KEY (`module_id`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nPK\x07\x08\xe9\xe8\x9a\xeex\x06\x00\x00x\x06\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\xfcZHM\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00%\x00	\x0020180704080001.crm_fields-data.up.sqlUT\x05\x00\x01L>\xbb[INSERT INTO `crm_fields` VALUES ('bool','Boolean value (yes / no)','');\nINSERT INTO `crm_fields` VALUES ('email','E-mail input','');\nINSERT INTO `crm_fields` VALUES ('enum','Single option picker','');\nINSERT INTO `crm_fields` VALUES ('hidden','Hidden value','');\nINSERT INTO `crm_fields` VALUES ('stamp','Date/time input','');\nINSERT INTO `crm_fields` VALUES ('text','Text input','');\nINSERT INTO `crm_fields` VALUES ('textarea','Text input (multi-line)','');\nPK\x07\x08\xf8u|\xb9\xcc\x01\x00\x00\xcc\x01\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\xf9ZHM\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\x00	\x00dump.shUT\x05\x00\x01G>\xbb[#!/bin/bash\nEPOCH=\"20180704080000\"\nrm *.sql\n\n## migrations are not versioned\n\nFILENAME=\"migrations.sql\"\ndocker exec -it db1 mysqldump -e --default-character-set=utf8 --skip-add-drop-table --skip-add-drop-database --skip-add-locks -n -d crust migrations \\\n	| perl -p -e 's/CREATE TABLE/CREATE TABLE IF NOT EXISTS/g' \\\n	| grep -v '^/' | grep -v '^--' | perl -p -e 's/\\cM//g' | perl -p -e 's/^\\n//g' | perl -p -e 's/;/;\\n/g' | perl -p -e 's/  / /g' > $FILENAME\n\n## up per table, all on epoch\n\nTABLES=$(/src/db1/bin/show_tables crust | grep ^crm | sort)\n\nFILENAME=\"${EPOCH}.base.up.sql\"\ndocker exec -it db1 mysqldump -e --default-character-set=utf8 --skip-add-drop-table --skip-add-drop-database --skip-add-locks -n -d crust $TABLES \\\n	| grep -v '^/' | grep -v '^--' | perl -p -e 's/\\cM//g' | perl -p -e 's/^\\n//g' | perl -p -e 's/;/;\\n/g' | perl -p -e 's/  / /g' > $FILENAME\n\n## data for crm_fields\n\nlet \"EPOCH++\"\nFILENAME=\"${EPOCH}.crm_fields-data.up.sql\"\ndocker exec -it db1 mysqldump --extended-insert=FALSE --no-create-info --default-character-set=utf8 --skip-add-drop-table --skip-add-drop-database --skip-add-locks -n crust crm_fields \\\n	| grep -v '^/' | grep -v '^--' | perl -p -e 's/\\cM//g' | perl -p -e 's/^\\n//g' | perl -p -e 's/  / /g' > $FILENAME\nPK\x07\x084J\xb3\xc2\xe8\x04\x00\x00\xe8\x04\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\xfbZHM\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0e\x00	\x00migrations.sqlUT\x05\x00\x01K>\xbb[CREATE TABLE IF NOT EXISTS `migrations` (\n `project` varchar(16) NOT NULL COMMENT 'sam, crm, ...',\n `filename` varchar(255) NOT NULL COMMENT 'yyyymmddHHMMSS.sql',\n `statement_index` int(11) NOT NULL COMMENT 'Statement number from SQL file',\n `status` varchar(16) NOT NULL COMMENT 'ok or full error message'\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\nPK\x07\x08~ 9=Z\x01\x00\x00Z\x01\x00\x00PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\xfcZHM\xe9\xe8\x9a\xeex\x06\x00\x00x\x06\x00\x00\x1a\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81\x00\x00\x00\x0020180704080000.base.up.sqlUT\x05\x00\x01L>\xbb[PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\xfcZHM\xf8u|\xb9\xcc\x01\x00\x00\xcc\x01\x00\x00%\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81\xc9\x06\x00\x0020180704080001.crm_fields-data.up.sqlUT\x05\x00\x01L>\xbb[PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\xf9ZHM4J\xb3\xc2\xe8\x04\x00\x00\xe8\x04\x00\x00\x07\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xed\x81\xf1\x08\x00\x00dump.shUT\x05\x00\x01G>\xbb[PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\xfbZHM~ 9=Z\x01\x00\x00Z\x01\x00\x00\x0e\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81\x17\x0e\x00\x00migrations.sqlUT\x05\x00\x01K>\xbb[PK\x05\x06\x00\x00\x00\x00\x04\x00\x04\x000\x01\x00\x00\xb6\x0f\x00\x00\x00\x00"
	fs.Register(data)
}
