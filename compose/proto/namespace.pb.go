// Code generated by protoc-gen-go. DO NOT EDIT.
// source: namespace.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Namespace struct {
	NamespaceID          uint64               `protobuf:"varint,1,opt,name=namespaceID,proto3" json:"namespaceID,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Slug                 string               `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`
	Enabled              bool                 `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt            *timestamp.Timestamp `protobuf:"bytes,10,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Namespace) Reset()         { *m = Namespace{} }
func (m *Namespace) String() string { return proto.CompactTextString(m) }
func (*Namespace) ProtoMessage()    {}
func (*Namespace) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecb1e126f615f5dd, []int{0}
}

func (m *Namespace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Namespace.Unmarshal(m, b)
}
func (m *Namespace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Namespace.Marshal(b, m, deterministic)
}
func (m *Namespace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Namespace.Merge(m, src)
}
func (m *Namespace) XXX_Size() int {
	return xxx_messageInfo_Namespace.Size(m)
}
func (m *Namespace) XXX_DiscardUnknown() {
	xxx_messageInfo_Namespace.DiscardUnknown(m)
}

var xxx_messageInfo_Namespace proto.InternalMessageInfo

func (m *Namespace) GetNamespaceID() uint64 {
	if m != nil {
		return m.NamespaceID
	}
	return 0
}

func (m *Namespace) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Namespace) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *Namespace) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *Namespace) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Namespace) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Namespace) GetDeletedAt() *timestamp.Timestamp {
	if m != nil {
		return m.DeletedAt
	}
	return nil
}

func init() {
	proto.RegisterType((*Namespace)(nil), "compose.Namespace")
}

func init() { proto.RegisterFile("namespace.proto", fileDescriptor_ecb1e126f615f5dd) }

var fileDescriptor_ecb1e126f615f5dd = []byte{
	// 213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x8e, 0x31, 0x4f, 0xc4, 0x20,
	0x18, 0x86, 0xc3, 0x59, 0xed, 0xc1, 0x0d, 0x26, 0x4c, 0xe4, 0x16, 0x89, 0x13, 0x13, 0x4d, 0x74,
	0x71, 0xd5, 0xb8, 0xb8, 0x38, 0x10, 0x27, 0x37, 0x5a, 0x3e, 0x1b, 0x13, 0x28, 0xa4, 0xd0, 0x9f,
	0xe3, 0x7f, 0x35, 0x14, 0xa9, 0xb7, 0x75, 0xe2, 0x7b, 0xdf, 0x3c, 0x0f, 0x79, 0xc9, 0xed, 0xa4,
	0x1d, 0xc4, 0xa0, 0x07, 0x90, 0x61, 0xf6, 0xc9, 0xd3, 0x76, 0xf0, 0x2e, 0xf8, 0x08, 0xe7, 0xbb,
	0xd1, 0xfb, 0xd1, 0x42, 0xb7, 0xd6, 0xfd, 0xf2, 0xd5, 0xa5, 0x6f, 0x07, 0x31, 0x69, 0x17, 0x0a,
	0x79, 0xff, 0x73, 0x20, 0xf8, 0xbd, 0xda, 0x94, 0x93, 0xd3, 0xf6, 0xd5, 0xdb, 0x2b, 0x43, 0x1c,
	0x89, 0x46, 0x5d, 0x56, 0x94, 0x92, 0x26, 0x47, 0x76, 0xe0, 0x48, 0x60, 0xb5, 0xde, 0xb9, 0x8b,
	0x76, 0x19, 0xd9, 0x55, 0xe9, 0xf2, 0x4d, 0x19, 0x69, 0x61, 0xd2, 0xbd, 0x05, 0xc3, 0x1a, 0x8e,
	0xc4, 0x51, 0xd5, 0x48, 0x9f, 0x08, 0x1e, 0x66, 0xd0, 0x09, 0xcc, 0x73, 0x62, 0x47, 0x8e, 0xc4,
	0xe9, 0xe1, 0x2c, 0xcb, 0x4c, 0x59, 0x67, 0xca, 0x8f, 0x3a, 0x53, 0xfd, 0xc3, 0xd9, 0x5c, 0x82,
	0xf9, 0x33, 0xf1, 0xbe, 0xb9, 0xc1, 0xd9, 0x34, 0x60, 0xa1, 0x98, 0x64, 0xdf, 0xdc, 0xe0, 0x97,
	0xf6, 0xf3, 0xba, 0x00, 0x37, 0xeb, 0xf3, 0xf8, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xb4, 0x34, 0xc5,
	0xd1, 0x6c, 0x01, 0x00, 0x00,
}
